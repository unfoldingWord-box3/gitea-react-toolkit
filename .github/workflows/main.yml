name: Install, Build & Run Cypress

on: [push]
env:
  NODE_ENV: test
  ACTIONS_ALLOW_UNSECURE_COMMANDS: ${{ secrets.ACTIONS_ALLOW_UNSECURE_COMMANDS }}
  CYPRESS_DASHBOARD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
  CYPRESS_TEST_USERNAME: ${{ secrets.CYPRESS_TEST_USERNAME }}
  CYPRESS_TEST_PASSWORD: ${{ secrets.CYPRESS_TEST_PASSWORD }}
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Branch Name
        run: echo "::set-env name=BRANCH::${GITHUB_REF##*/}"
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
#      - name: Cache Cypress
#        uses: actions/cache@v1
#        id: cypress_cache
#        with:
#          path: ~/.cache/Cypress
#          key: ${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-cypress-
      - name: Install Packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn;
      - name: Run Tests
        run: yarn run test:unit;
#      - name: Save Test Data
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#           name: Cypress Videos
#           path: ./cypress/videos/
      - name: Create Badge For Coverage Results
        run: yarn create-coverage-badge;
      - name: Commit Coverage Results
        uses: EndBug/add-and-commit@v9
        with:
          add: 'coverage/shields.json'
          committer_name: GitHub Action
          committer_email: action@github.com
          message: 'Add Coverage Results'
